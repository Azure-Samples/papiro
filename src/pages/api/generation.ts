import { RestError } from '@azure/core-http';
import { withIronSessionApiRoute } from 'iron-session/next';
import { NextApiRequest, NextApiResponse } from 'next';
import { ensureSession } from '~/helpers';
import { GenerationData, sessionOptions } from '~/models';

const generationEndpoint = process.env.TEXT_GENERATION_ENDPOINT || '';
const generationKey = process.env.TEXT_GENERATION_KEY || '';

async function generationRouter(req: NextApiRequest, res: NextApiResponse<GenerationData | RestError>) {
  try {
    ensureSession(req);

    if (generationEndpoint.includes('http')) {
      const response = await fetch(generationEndpoint, {
        method: 'POST',
        headers: {
          Authorization: 'Bearer ' + generationKey,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(req.body)
      });

      const data = await response.text();

      const rsp: GenerationData = JSON.parse(data);

      res.status(200).json(rsp);
    } else {
      res.status(200).json({
        time: 0,
        generated: ['this marketing copy is not generated by the text generation service (no endpoint provided)'],
        timestamp: new Date().toISOString(),
        message: 'No endpoint specified for text generation'
      });
    }
  } catch (error) {
    const e = <RestError>error;
    res.status(500).json({
      code: e.code,
      details: e.details,
      message: e.message,
      name: e.name,
      statusCode: e.statusCode
    });
  }
}

export default withIronSessionApiRoute(generationRouter, sessionOptions);
